name: "\U0001F9E0 Neural Archaeology Pre-PR Analysis"
true:
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    branches:
    - main
  push:
    branches:
    - main
  workflow_dispatch:
    inputs:
      analysis_depth:
        description: Analysis depth (quick/full/deep)
        required: false
        default: full
        type: choice
        options:
        - quick
        - full
        - deep
env:
  PSYCHO_NOIR_MODE: neural_archaeology_active
jobs:
  neural-archaeology-analysis:
    name: "\U0001F9E0 Neural Archaeology Pipeline"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    steps:
    - name: "\U0001F50D Checkout Repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: "\U0001F40D Setup Python Environment"
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: pip
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    - name: "\U0001F4E6 Install Dependencies"
      run: 'python -m pip install --upgrade pip

        pip install -r backend/requirements.txt

        # Ensure neural archaeology dependencies

        pip install sqlite3 asyncio pathlib dataclasses

        '
    - name: "\U0001F5C3\uFE0F Initialize Failure Archaeology Database"
      run: "echo \"\U0001F9E0 INITIALIZING PSYCHO-NOIR KONTRAPUNKT NEURAL ARCHAEOLOGY...\"\
        \nmkdir -p data/generert data/rapporter\ncd backend/python\npython failure_archaeology_system.py\n"
    - name: "\U0001F4E1 Harvest Historical Failures (Pre-PR Context)"
      id: harvest
      run: "echo \"\U0001F4E1 HARVESTING HISTORICAL FAILURES FOR CONTEXT...\"\ncd\
        \ backend/python\npython failed_runs_harvester.py\necho \"harvest_completed=true\"\
        \ >> $GITHUB_OUTPUT\n"
    - name: "\U0001F52E Generate Pre-PR Predictions"
      id: predictions
      if: steps.harvest.outputs.harvest_completed == 'true'
      run: "echo \"\U0001F52E GENERATING PRE-PR FAILURE PREDICTIONS...\"\ncd backend/python\n\
        \n# Create context for current PR/push\ncat > current_context.json << EOF\n\
        {\n  \"event_type\": \"${{ github.event_name }}\",\n  \"pr_number\": \"${{\
        \ github.event.pull_request.number || 'main_push' }}\",\n  \"changed_files_count\"\
        : $(git diff --name-only HEAD~1 HEAD | wc -l),\n  \"branch\": \"${{ github.ref_name\
        \ }}\",\n  \"actor\": \"${{ github.actor }}\",\n  \"timestamp\": \"$(date\
        \ -u +%Y-%m-%dT%H:%M:%S.%fZ)\",\n  \"repository\": \"${{ github.repository\
        \ }}\",\n  \"workflow_type\": \"pre_pr_analysis\"\n}\nEOF\n\n# Run neural\
        \ archaeology with current context\npython neural_archaeology_orchestrator.py\
        \ --mode full\necho \"predictions_generated=true\" >> $GITHUB_OUTPUT\n"
    - name: "\U0001F4CA Generate Pre-PR Risk Assessment"
      id: risk_assessment
      if: steps.predictions.outputs.predictions_generated == 'true'
      run: "echo \"\U0001F4CA GENERATING PRE-PR RISK ASSESSMENT...\"\ncd backend/python\n\
        python failure_analysis_visualizer.py > risk_assessment.txt\n\n# Extract critical\
        \ metrics for PR comment\nCAUSAL_COLLAPSES=$(grep \"CAUSAL COLLAPSE\" risk_assessment.txt\
        \ | grep -oE '[0-9]+' | head -1 || echo \"0\")\nSKYSKRAPER_RATE=$(grep \"\
        Skyskraper Systems:\" risk_assessment.txt | grep -oE '[0-9]+\\.[0-9]+%' |\
        \ head -1 || echo \"0%\")\nUNRESOLVED_RATE=$(grep \"failures remain UNRESOLVED\"\
        \ risk_assessment.txt | grep -oE '[0-9]+\\.[0-9]+%' | head -1 || echo \"0%\"\
        )\n\necho \"causal_collapses=$CAUSAL_COLLAPSES\" >> $GITHUB_OUTPUT\necho \"\
        skyskraper_rate=$SKYSKRAPER_RATE\" >> $GITHUB_OUTPUT\necho \"unresolved_rate=$UNRESOLVED_RATE\"\
        \ >> $GITHUB_OUTPUT\n"
    - name: "\U0001F3AF Create Pre-PR Intelligence Report"
      if: steps.risk_assessment.outputs.causal_collapses != '0' || github.event_name
        == 'workflow_dispatch'
      run: "echo \"\U0001F3AF CREATING PRE-PR NEURAL ARCHAEOLOGY INTELLIGENCE REPORT...\"\
        \n\n# Find the latest report\nLATEST_REPORT=$(find data/rapporter -name \"\
        *.md\" -type f -printf '%T@ %p\\n' | sort -n | tail -1 | cut -d' ' -f2-)\n\
        \nif [ -f \"$LATEST_REPORT\" ]; then\n  echo \"\U0001F4CB Found report: $LATEST_REPORT\"\
        \n  \n  # Create enhanced PR comment with neural archaeology insights\n  cat\
        \ > pr_comment.md << 'EOF'\n## \U0001F9E0 PSYCHO-NOIR KONTRAPUNKT: NEURAL\
        \ ARCHAEOLOGY ANALYSIS\n\n**Pre-PR Risk Assessment Completed** \u2705\n\n\
        ### \U0001F4CA Critical Metrics:\n- **Causal Collapse Events:** ${{ steps.risk_assessment.outputs.causal_collapses\
        \ }}\n- **Skyskraper Failure Rate:** ${{ steps.risk_assessment.outputs.skyskraper_rate\
        \ }}\n- **Unresolved Learning Opportunities:** ${{ steps.risk_assessment.outputs.unresolved_rate\
        \ }}\n\n### \U0001F3AF Pre-PR Recommendations:\nEOF\n\n  if [ \"${{ steps.risk_assessment.outputs.causal_collapses\
        \ }}\" != \"0\" ]; then\n    echo \"- \U0001F480 **CRITICAL**: ${{ steps.risk_assessment.outputs.causal_collapses\
        \ }} Causal Collapse events detected - implement checkpoint/rollback mechanisms\"\
        \ >> pr_comment.md\n  fi\n  \n  if [[ \"${{ steps.risk_assessment.outputs.skyskraper_rate\
        \ }}\" =~ ^[6-9][0-9] ]] || [[ \"${{ steps.risk_assessment.outputs.skyskraper_rate\
        \ }}\" =~ ^100 ]]; then\n    echo \"- \U0001F3E2 **HIGH PRIORITY**: Skyskraper\
        \ automation systems showing high failure rate (${{ steps.risk_assessment.outputs.skyskraper_rate\
        \ }}) - review CI/CD resilience\" >> pr_comment.md\n  fi\n  \n  cat >> pr_comment.md\
        \ << 'EOF'\n- \U0001F504 **Continue Learning**: Add resolution data for unresolved\
        \ failures to improve prediction accuracy\n- \u26A1 **Proactive Monitoring**:\
        \ System is actively learning from failure patterns\n\n### \U0001F52E Predictive\
        \ Intelligence Status:\n- **Database:** `data/generert/failure_archaeology.db`\
        \ updated with latest patterns\n- **Learning Engine:** Bidirectional intelligence\
        \ operational\n- **Next Analysis:** Scheduled for next PR/push event\n\n---\n\
        *Generated by Neural Archaeology Orchestrator - Den Usynlige H\xE5nd transforming\
        \ chaos to wisdom*\nEOF\nfi\n"
    - name: "\U0001F4AC Comment PR with Neural Archaeology Insights"
      if: github.event_name == 'pull_request' && steps.risk_assessment.outputs.causal_collapses
        != '0'
      uses: actions/github-script@v7
      with:
        script: "const fs = require('fs');\n\nif (fs.existsSync('pr_comment.md'))\
          \ {\n  const comment = fs.readFileSync('pr_comment.md', 'utf8');\n  \n \
          \ github.rest.issues.createComment({\n    issue_number: context.issue.number,\n\
          \    owner: context.repo.owner,\n    repo: context.repo.repo,\n    body:\
          \ comment\n  });\n}\n"
    - name: "\U0001F4CB Archive Neural Archaeology Artifacts"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: neural-archaeology-reports-${{ github.run_number }}
        path: 'data/rapporter/

          data/generert/

          backend/python/risk_assessment.txt

          '
        retention-days: 30
    - name: "\u2705 Neural Archaeology Pipeline Status"
      if: always()
      run: "echo \"\U0001F9E0 NEURAL ARCHAEOLOGY PIPELINE STATUS:\"\necho \"   \U0001F4E1\
        \ Harvest: ${{ steps.harvest.outputs.harvest_completed == 'true' && '\u2705\
        \ SUCCESS' || '\u274C FAILED' }}\"\necho \"   \U0001F52E Predictions: ${{\
        \ steps.predictions.outputs.predictions_generated == 'true' && '\u2705 SUCCESS'\
        \ || '\u274C FAILED' }}\"\necho \"   \U0001F4CA Risk Assessment: ${{ steps.risk_assessment.outputs.causal_collapses\
        \ != '' && '\u2705 SUCCESS' || '\u274C FAILED' }}\"\necho \"\"\necho \"\U0001F3AF\
        \ PSYCHO-NOIR KONTRAPUNKT NEURAL ARCHAEOLOGY OPERATIONAL\"\n\nif [ \"${{ steps.risk_assessment.outputs.causal_collapses\
        \ }}\" != \"0\" ]; then\n  echo \"\u26A0\uFE0F  CRITICAL ALERTS DETECTED -\
        \ Check PR comments for details\"\n  exit 1\nfi\n"
    timeout-minutes: 30
