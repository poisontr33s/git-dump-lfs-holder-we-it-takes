# üåê PSYCHO-NOIR KONTRAPUNKT NGINX CONFIGURATION üåê
# ===================================================
# 
# 100% robust reverse proxy med comprehensive error handling.
# Proven patterns, production-grade performance, security hardening.
# 
# NGINX_SIGNATURE: 0xROBUST_REVERSE_PROXY_OPERATIONAL
# SECURITY_LEVEL: ENTERPRISE_GRADE_HARDENING

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=frontend:10m rate=50r/s;
    
    # Upstream backend services
    upstream psychonoir_api {
        least_conn;
        server 127.0.0.1:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Main server configuration
    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self'" always;
        
        # Root directory for static files
        root /app/frontend;
        index index.html;
        
        # Frontend static files
        location / {
            limit_req zone=frontend burst=20 nodelay;
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
        }
        
        # API endpoints
        location /api/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://psychonoir_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            proxy_pass http://psychonoir_api/health;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }
        
        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }
        
        # Error pages
        error_page 404 /error/404.html;
        error_page 500 502 503 504 /error/50x.html;
        
        location ^~ /error/ {
            internal;
            root /app/frontend;
        }
    }
    
    # SSL server configuration (for production with certificates)
    server {
        listen 443 ssl http2;
        server_name localhost;
        
        # SSL configuration (self-signed for development)
        ssl_certificate /etc/ssl/certs/psychonoir.crt;
        ssl_certificate_key /etc/ssl/private/psychonoir.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # Modern SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;
        
        # Same configuration as HTTP server but with SSL
        root /app/frontend;
        index index.html;
        
        # Include same location blocks as HTTP server
        include /etc/nginx/conf.d/psychonoir-locations.conf;
    }
}
