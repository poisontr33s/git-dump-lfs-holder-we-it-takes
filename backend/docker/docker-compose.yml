# üê≥ PSYCHO-NOIR KONTRAPUNKT DOCKER COMPOSE üê≥
# ================================================
#
# 100% robust orchestration med comprehensive service management.
# Proven patterns, production-grade setup, enterprise reliability.
#
# COMPOSE_SIGNATURE: 0xROBUST_ORCHESTRATION_OPERATIONAL
# ORCHESTRATION_LEVEL: ENTERPRISE_GRADE_DEPLOYMENT

version: "3.8"

services:
  # üé≠ Main Application Service
  psychonoir-app:
    build:
      context: ../../
      dockerfile: backend/docker/Dockerfile
    image: psychonoir-kontrapunkt:latest
    container_name: psychonoir-app
    restart: unless-stopped
    ports:
      - "80:80" # Nginx reverse proxy
      - "5000:5000" # API direct access
      - "8080:8080" # Alternative port
    volumes:
      - psychonoir-data:/app/data
      - psychonoir-logs:/var/log/psychonoir
      - psychonoir-nginx-logs:/var/log/nginx
      - /etc/localtime:/etc/localtime:ro
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
      - DB_PATH=/app/data/db/psycho_noir_production.db
      - FRONTEND_PATH=/app/frontend
      - CORS_ORIGINS=*
      - MAX_WORKERS=4
      - WORKER_CLASS=gevent
      - BIND_ADDRESS=0.0.0.0:5000
      - HEALTH_CHECK_FORMAT=json
    healthcheck:
      test: ["CMD", "python", "/app/healthcheck.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - psychonoir-network
    depends_on:
      - psychonoir-redis
    labels:
      - "com.psychonoir.service=main"
      - "com.psychonoir.environment=production"

  # üìä Redis Cache Service
  psychonoir-redis:
    image: redis:7-alpine
    container_name: psychonoir-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - psychonoir-redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - psychonoir-network
    labels:
      - "com.psychonoir.service=cache"

  # üîç Monitoring Service
  psychonoir-monitor:
    image: prom/prometheus:latest
    container_name: psychonoir-monitor
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - psychonoir-prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - psychonoir-network
    labels:
      - "com.psychonoir.service=monitoring"

  # üìà Grafana Dashboard
  psychonoir-grafana:
    image: grafana/grafana:latest
    container_name: psychonoir-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - psychonoir-grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=psychonoir2025
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SMTP_ENABLED=false
    networks:
      - psychonoir-network
    depends_on:
      - psychonoir-monitor
    labels:
      - "com.psychonoir.service=dashboard"

  # üîÑ Backup Service
  psychonoir-backup:
    build:
      context: ../../
      dockerfile: backend/docker/Dockerfile
    image: psychonoir-kontrapunkt:latest
    container_name: psychonoir-backup
    restart: "no"
    volumes:
      - psychonoir-data:/app/data:ro
      - psychonoir-backups:/backups
    environment:
      - BACKUP_SCHEDULE=daily
      - BACKUP_RETENTION=7
    command: ["python", "/app/backend/python/backup_service.py"]
    networks:
      - psychonoir-network
    profiles:
      - backup
    labels:
      - "com.psychonoir.service=backup"

# üì¶ Persistent Volumes
volumes:
  psychonoir-data:
    driver: local
    labels:
      - "com.psychonoir.volume=data"

  psychonoir-logs:
    driver: local
    labels:
      - "com.psychonoir.volume=logs"

  psychonoir-nginx-logs:
    driver: local
    labels:
      - "com.psychonoir.volume=nginx-logs"

  psychonoir-redis-data:
    driver: local
    labels:
      - "com.psychonoir.volume=redis"

  psychonoir-prometheus-data:
    driver: local
    labels:
      - "com.psychonoir.volume=prometheus"

  psychonoir-grafana-data:
    driver: local
    labels:
      - "com.psychonoir.volume=grafana"

  psychonoir-backups:
    driver: local
    labels:
      - "com.psychonoir.volume=backups"

# üåê Networks
networks:
  psychonoir-network:
    driver: bridge
    labels:
      - "com.psychonoir.network=main"
